diff --git a/Classes/Context/LanguageAspectFactory.php b/Classes/Context/LanguageAspectFactory.php
index 0d6c5a93d..cd3971662 100644
--- a/Classes/Context/LanguageAspectFactory.php
+++ b/Classes/Context/LanguageAspectFactory.php
@@ -60,7 +60,7 @@ class LanguageAspectFactory
             case 'content_fallback':
                 if (!empty($fallbackOrder)) {
                     $fallBackOrder = GeneralUtility::trimExplode(',', $fallbackOrder);
-                    // no strict typing explictly done here
+                    // no strict typing explicitly done here
                     if (!in_array(0, $fallBackOrder) && !in_array('pageNotFound', $fallBackOrder)) {
                         $fallBackOrder[] = 'pageNotFound';
                     }
@@ -94,7 +94,7 @@ class LanguageAspectFactory
     }
 
     /**
-     * Site Languages always run with overlays + floating records.
+     * Site Languages always run in floating mode
      *
      * @param SiteLanguage $language
      * @return LanguageAspect
@@ -103,15 +103,16 @@ class LanguageAspectFactory
     {
         $languageId = $language->getLanguageId();
         $fallbackType = $language->getFallbackType();
+        $overlayType = LanguageAspect::OVERLAYS_ON_WITH_FLOATING;
         if ($fallbackType === 'fallback') {
             $fallbackOrder = $language->getFallbackLanguageIds();
             $fallbackOrder[] = 'pageNotFound';
+            $overlayType = LanguageAspect::OVERLAYS_MIXED;
         } elseif ($fallbackType === 'strict') {
             $fallbackOrder = [];
         } else {
             $fallbackOrder = [0];
         }
-
-        return GeneralUtility::makeInstance(LanguageAspect::class, $languageId, $languageId, LanguageAspect::OVERLAYS_ON_WITH_FLOATING, $fallbackOrder);
+        return GeneralUtility::makeInstance(LanguageAspect::class, $languageId, $languageId, $overlayType, $fallbackOrder);
     }
 }
diff --git a/Classes/Routing/PageRouter.php b/Classes/Routing/PageRouter.php
index f6e0a9f49..b58661401 100644
--- a/Classes/Routing/PageRouter.php
+++ b/Classes/Routing/PageRouter.php
@@ -115,8 +115,16 @@ class PageRouter implements RouterInterface
     {
         $urlPath = $previousResult->getTail();
         $slugCandidates = $this->getCandidateSlugsFromRoutePath($urlPath ?: '/');
+        $pageCandidates = [];
         $language = $previousResult->getLanguage();
-        $pageCandidates = $this->getPagesFromDatabaseForCandidates($slugCandidates, $language->getLanguageId());
+        $languages = array_merge([$language->getLanguageId()], $language->getFallbackLanguageIds());
+        foreach ($languages as $languageId) {
+            $pageCandidates = $this->getPagesFromDatabaseForCandidates($slugCandidates, $languageId);
+            if (!empty($pageCandidates)) {
+                break;
+            }
+        }
+
         // Stop if there are no candidates
         if (empty($pageCandidates)) {
             throw new RouteNotFoundException('No page candidates found for path "' . $urlPath . '"', 1538389999);
@@ -451,7 +459,8 @@ class PageRouter implements RouterInterface
             $candidatePathParts[] = $prefix;
             array_pop($pathParts);
         }
-        $candidatePathParts[] = '/';
+        // TODO: Adding "/" to the candidates breaks language fallback handling, need to investigate
+        // $candidatePathParts[] = '/';
         return $candidatePathParts;
     }
 
diff --git a/Classes/Site/Entity/SiteLanguage.php b/Classes/Site/Entity/SiteLanguage.php
index 033596a4d..b4cb78ba7 100644
--- a/Classes/Site/Entity/SiteLanguage.php
+++ b/Classes/Site/Entity/SiteLanguage.php
@@ -150,15 +150,16 @@ class SiteLanguage
         }
         if (!empty($configuration['fallbackType'])) {
             $this->fallbackType = $configuration['fallbackType'];
-        }
-        if (isset($configuration['fallbacks'])) {
-            $fallbackLanguageIds = $configuration['fallbacks'];
 
-            if (is_string($fallbackLanguageIds)) {
-                $fallbackLanguageIds = explode(',', $fallbackLanguageIds);
-            }
+            if ($configuration['fallbackType'] === 'fallback' && isset($configuration['fallbacks'])) {
+                $fallbackLanguageIds = $configuration['fallbacks'];
 
-            $this->fallbackLanguageIds = array_map('intval', $fallbackLanguageIds);
+                if (is_string($fallbackLanguageIds)) {
+                    $fallbackLanguageIds = explode(',', $fallbackLanguageIds);
+                }
+
+                $this->fallbackLanguageIds = array_map('intval', $fallbackLanguageIds);
+            }
         }
         if (isset($configuration['enabled'])) {
             $this->enabled = (bool)$configuration['enabled'];
